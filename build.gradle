buildscript {
    ext {
        springBootVersion = '2.2.4.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.convert'

    group = 'com.bgpark'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation group: 'com.google.guava', name: 'guava', version: 'r05'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // database
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.1"
        runtimeOnly 'com.h2database:h2'

        // rest docs
        asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'
        testImplementation 'org.springframework.restdocs:spring-restdocs-restassured:2.0.5.RELEASE'

        // rest assured
        testImplementation 'io.rest-assured:rest-assured:3.3.0'
        testImplementation 'io.rest-assured:spring-mock-mvc:3.3.0'

        // s3
        implementation 'com.amazonaws:aws-java-sdk-s3:1.11.401'
        testImplementation 'io.findify:s3mock_2.13:0.2.6'
    }

    ext {
        snippetsDir = file('build/generated-snippets')
    }

    // snippet 생성: 테스트
    test {
        useJUnitPlatform()
        outputs.dir snippetsDir
    }

    // snippet 생성: 문서 테스트
    task testDocument(type: Test) {
        useJUnitPlatform()
        filter {
            includeTestsMatching "*.documentation.*"
        }
    }

    // html 생성
    asciidoctor {
        inputs.dir snippetsDir
        dependsOn test
    }

    // html 생성: 배포용
    bootJar {
        dependsOn asciidoctor
        from ("${asciidoctor.outputDir}/html5") {
            into 'static/docs'
        }
    }

    // html 생성: 로컬용
    task copyDocument(type: Copy) {
        dependsOn asciidoctor
        from file("${asciidoctor.outputDir}/html5")
        into file("src/main/resources/static/docs")
    }

    task localDocument() {
        dependsOn testDocument
        dependsOn copyDocument
    }
}
